[project]
name = "dataascode"
version = "0.0.1"
description = "This is a template repository for Python projects that use uv for their dependency management."
authors = [{ name = "Jonathan NDamba", email = "jonathan@dataascode.tech" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.13,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "basic-notion>=0.6.2",
    "buridan-ui>=0.7.6b0",
    "deltalake>=1.2.1",
    "dotenv>=0.9.9",
    "duckdb>=1.4.1",
    "fastapi>=0.120.0",
    "google-cloud-storage>=3.4.1",
    "jinja2>=3.1.0",
    "logfire[fastapi]>=4.14.2",
    "loguru>=0.7.3",
    "notion-client>=2.6.0",
    "pandas>=2.3.3",
    "polars>=1.34.0",
    "pydantic-settings>=2.11.0",
    "pydantic>=2.12.3",
    "reflex>=0.6.8.post1",
    "uvicorn>=0.38.0",
]

[project.urls]
Homepage = "https://jojodataascode.github.io/dataascode/"
Repository = "https://github.com/jojodataascode/dataascode"
Documentation = "https://jojodataascode.github.io/dataascode/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "sqlfluff>=3.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dataascode"]

[tool.mypy]
files = ["dataascode"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["dataascode"]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.sqlfluff.core]
templater = "jinja"
dialect = "duckdb"
exclude_rules = [
    "AL04", "AL05", "AL06", "AL07", "AM01", "AM02", "AM03", "AM04", "AM07",
    "CV01", "CV02", "CV03", "CV04", "CV05", "CV06", "CV07", "CV08", "CV09", "CV10", "CV11",
    "LT03", "LT05", "LT07", "LT08", "LT12", "LT13", "RF01", "RF02", "RF03", "RF04",
    "RF05", "RF06", "ST01", "ST02", "ST03", "ST06", "ST07", "ST08", "TQ01"
]
ignore = "templating"
large_file_skip_byte_limit = 0
max_line_length = 0

[tool.sqlfluff.layout.type.alias_expression]
spacing_before = "align"
align_within = "select_clause"
spacing_after = "touch"

[tool.sqlfluff.indentation]
tab_space_size = 2
indent_unit = "space"
indented_joins = false
indented_using_on = true
allow_implicit_indents = true
indented_on_contents = false
indented_ctes = false

[tool.sqlfluff.rules."aliasing.table"]
aliasing = "explicit"

[tool.sqlfluff.rules."aliasing.column"]
aliasing = "explicit"

[tool.sqlfluff.rules."aliasing.expression"]
allow_scalar = true

[tool.sqlfluff.rules."ambiguous.join"]
fully_qualify_join_types = "inner"

[tool.sqlfluff.rules."ambiguous.column_references"]
group_by_and_order_by_style = "consistent"

[tool.sqlfluff.rules."capitalisation.keywords"]
capitalisation_policy = "upper"

[tool.sqlfluff.rules."capitalisation.identifiers"]
extended_capitalisation_policy = "lower"
unquoted_identifiers_policy = "all"

[tool.sqlfluff.rules."capitalisation.functions"]
extended_capitalisation_policy = "upper"

[tool.sqlfluff.rules."capitalisation.literals"]
capitalisation_policy = "upper"

[tool.sqlfluff.rules."capitalisation.types"]
extended_capitalisation_policy = "upper"

[tool.sqlfluff.rules."jinja.padding"]
single_space = true

[tool.sqlfluff.rules."layout.spacing"]
no_trailing_whitespace = true
extra_whitespace = false

[tool.sqlfluff.rules."layout.commas"]
line_position = "trailing"

[tool.sqlfluff.rules."layout.functions"]
no_space_after_function_name = true

[tool.sqlfluff.rules."layout.select_targets"]
wildcard_policy = "single"

[tool.sqlfluff.rules."layout.set_operators"]
set_operator_on_new_line = ["UNION", "UNION ALL"]

[tool.sqlfluff.rules."structure.nested_case"]
# Empty section for nested case rules

[tool.sqlfluff.rules."structure.subquery"]
forbid_subquery_in = "join"
